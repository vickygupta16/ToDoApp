{"version":3,"sources":["components/InfoButton.js","components/ModeButton.js","components/TasksList.js","components/CompleteTaskList.js","components/IncompleteTaskList.js","components/toDoList.js","App.js","reportWebVitals.js","index.js"],"names":["InfoButton","toggleButton","bind","removeAnimation","document","getElementsByClassName","classList","contains","add","remove","className","onClick","this","data-bs-toggle","data-bs-target","href","target","type","id","tabindex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","colspan","rowspan","Component","ModeButton","state","darkmode","enableDarkMode","setState","prevState","getElementById","toggle","setTimeout","TasksList","props","tasksObj","todoTask","localStorage","getItem","JSON","parse","map","element","index","complete_status","task_name","markAsIncomplete","markAsComplete","editing","editTaskID","cancelEditing","editTask","deleteTask","CompleteTaskList","count","IncompleteTaskList","toast","configure","ToDoList","inputTask","ddmode","addTask","updateInputTask","deleteAllTasks","updateTask","selectValue","length","trim","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","push","focus","setItem","stringify","success","e","value","warn","removeItem","indexID","forEach","splice","placeholder","onChange","autoFocus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1b84cea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class InfoButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.toggleButton = this.toggleButton.bind(this);\r\n    this.removeAnimation = this.removeAnimation.bind(this);\r\n  }\r\n\r\n  toggleButton() {\r\n    if (\r\n      document\r\n        .getElementsByClassName(\"code-logo\")[0]\r\n        .classList.contains(\"animate-code-logo\")\r\n    ) {\r\n      document\r\n        .getElementsByClassName(\"code-logo\")[0]\r\n        .classList.add(\"hide-code-logo\");\r\n      document\r\n        .getElementsByClassName(\"code-logo\")[0]\r\n        .classList.remove(\"animate-code-logo\");\r\n    } else {\r\n      document\r\n        .getElementsByClassName(\"code-logo\")[0]\r\n        .classList.add(\"animate-code-logo\");\r\n      document\r\n        .getElementsByClassName(\"code-logo\")[0]\r\n        .classList.remove(\"hide-code-logo\");\r\n    }\r\n    if (\r\n      document\r\n        .getElementsByClassName(\"dev-logo\")[0]\r\n        .classList.contains(\"animate-dev-logo\")\r\n    ) {\r\n      document\r\n        .getElementsByClassName(\"dev-logo\")[0]\r\n        .classList.add(\"hide-dev-logo\");\r\n      document\r\n        .getElementsByClassName(\"dev-logo\")[0]\r\n        .classList.remove(\"animate-dev-logo\");\r\n    } else {\r\n      document\r\n        .getElementsByClassName(\"dev-logo\")[0]\r\n        .classList.add(\"animate-dev-logo\");\r\n      document\r\n        .getElementsByClassName(\"dev-logo\")[0]\r\n        .classList.remove(\"hide-dev-logo\");\r\n    }\r\n  }\r\n  removeAnimation() {\r\n    document\r\n      .getElementsByClassName(\"code-logo\")[0]\r\n      .classList.add(\"hide-code-logo\");\r\n    document\r\n      .getElementsByClassName(\"code-logo\")[0]\r\n      .classList.remove(\"animate-code-logo\");\r\n    document\r\n      .getElementsByClassName(\"dev-logo\")[0]\r\n      .classList.add(\"hide-dev-logo\");\r\n    document\r\n      .getElementsByClassName(\"dev-logo\")[0]\r\n      .classList.remove(\"animate-dev-logo\");\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"code-logo\">\r\n          <i\r\n            className=\"fas fa-code fa-2x btn\"\r\n            onClick={this.removeAnimation}\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#infoModal\"\r\n          ></i>\r\n        </div>\r\n        <div className=\"dev-logo\">\r\n          <a href=\"https://vickygupta-5a6e.hostman.site/\" target=\"_blank\">\r\n            <i\r\n              className=\"fas fa-user-circle fa-2x btn\"\r\n              onClick={this.removeAnimation}\r\n            ></i>\r\n          </a>\r\n        </div>\r\n        <i\r\n          className=\"fas fa-info-circle fa-2x\"\r\n          type=\"button\"\r\n          onClick={this.toggleButton}\r\n        ></i>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"infoModal\"\r\n          tabindex=\"-1\"\r\n          aria-labelledby=\"exampleModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                  Project Info\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <table className=\"table table-hover table-bordered\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Name</td>\r\n                      <th colspan=\"2\">ToDo App</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td rowspan=\"5\" className=\"align-middle\">\r\n                        Technology / Sources\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>React JS</th>\r\n                      <th>React-Toastify</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>HTML5</th>\r\n                      <th>CSS3</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Bootstrap</th>\r\n                      <th>JavaScript</th>\r\n                    </tr>\r\n                    <tr className=\"text-center\">\r\n                      <th colspan=\"2\">Font Awesome</th>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ModeButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      darkmode: false,\r\n    };\r\n    this.enableDarkMode = this.enableDarkMode.bind(this);\r\n  }\r\n  enableDarkMode() {\r\n    this.setState(\r\n      (prevState) => ({\r\n        darkmode: !prevState.darkmode,\r\n      }),\r\n      () => {\r\n        document.getElementById(\"htmlTag\").classList.toggle(\"darkMode\");\r\n        document\r\n          .getElementsByClassName(\"mode\")[0]\r\n          .classList.add(\"animate-mode\");\r\n        setTimeout(() => {\r\n          document\r\n            .getElementsByClassName(\"mode\")[0]\r\n            .classList.remove(\"animate-mode\");\r\n        }, 500);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <i\r\n          type=\"button\"\r\n          className={\r\n            this.state.darkmode\r\n              ? \"fas fa-sun fa-2x mode\"\r\n              : \"fas fa-moon fa-2x mode\"\r\n          }\r\n          onClick={this.enableDarkMode}\r\n        ></i>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport function TasksList(props) {\r\n  //console.log(props);\r\n  let todoTask = localStorage.getItem(\"todoTasks\");\r\n  let tasksObj;\r\n  if (todoTask != null) {\r\n    tasksObj = JSON.parse(todoTask);\r\n    return (\r\n      <>\r\n        {tasksObj.map((element, index) => {\r\n          return (\r\n            <div key={index} className=\"row tasksRow\">\r\n              <div className=\"col-1\">{index + 1}</div>\r\n              <div\r\n                className={element.complete_status ? \"col-8 taskDone\" : \"col-8\"}\r\n              >\r\n                {element.task_name}\r\n              </div>\r\n              <div className=\"col-1\">\r\n                <i\r\n                  className={\r\n                    element.complete_status ? \"fas fa-undo\" : \"fas fa-check\"\r\n                  }\r\n                  onClick={() => {\r\n                    element.complete_status\r\n                      ? props.markAsIncomplete(index)\r\n                      : props.markAsComplete(index);\r\n                  }}\r\n                  type=\"button\"\r\n                ></i>\r\n              </div>\r\n              <div className=\"col-1\">\r\n                <i\r\n                  className={\r\n                    element.complete_status\r\n                      ? \"\"\r\n                      : props.editing && index === props.editTaskID\r\n                      ? \"far fa-window-close\"\r\n                      : \"fas fa-edit\"\r\n                  }\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    props.editing && index === props.editTaskID\r\n                      ? props.cancelEditing()\r\n                      : props.editTask(index)\r\n                  }\r\n                ></i>\r\n              </div>\r\n              <div className=\"col-1\">\r\n                <i\r\n                  className=\"fas fa-trash-alt\"\r\n                  type=\"button\"\r\n                  onClick={() => props.deleteTask(index)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport function CompleteTaskList(props) {\r\n  let todoTask = localStorage.getItem(\"todoTasks\");\r\n  let tasksObj;\r\n  if (todoTask != null) {\r\n    tasksObj = JSON.parse(todoTask);\r\n    let count = 0;\r\n    tasksObj.map((element) => {\r\n      element.complete_status === true && count++;\r\n    });\r\n    if (count > 0) {\r\n      return (\r\n        <>\r\n          {tasksObj.map((element, index) => {\r\n            return element.complete_status === true ? (\r\n              <div key={index} className=\"row tasksRow\">\r\n                <div className=\"col-1\">{index + 1}</div>\r\n                <div className=\"col-8\">{element.task_name}</div>\r\n                <div className=\"col-1\">\r\n                  <i\r\n                    className=\"fas fa-undo\"\r\n                    onClick={() => {\r\n                      props.markAsIncomplete(index);\r\n                    }}\r\n                    type=\"button\"\r\n                  ></i>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-1\">\r\n                  <i\r\n                    className=\"fas fa-trash-alt\"\r\n                    type=\"button\"\r\n                    onClick={() => props.deleteTask(index)}\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            );\r\n          })}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <h5>No Complete Tasks</h5>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport function IncompleteTaskList(props) {\r\n  let todoTask = localStorage.getItem(\"todoTasks\");\r\n  let tasksObj;\r\n  if (todoTask != null) {\r\n    tasksObj = JSON.parse(todoTask);\r\n    let count = 0;\r\n    tasksObj.map((element) => {\r\n      element.complete_status === false && count++;\r\n    });\r\n    if (count > 0) {\r\n      return (\r\n        <>\r\n          {tasksObj.map((element, index) => {\r\n            return element.complete_status === false ? (\r\n              <div key={index} className=\"row tasksRow\">\r\n                <div className=\"col-1\">{index + 1}</div>\r\n                <div className=\"col-8\">{element.task_name}</div>\r\n                <div className=\"col-1\">\r\n                  <i\r\n                    className=\"fas fa-check\"\r\n                    onClick={() => {\r\n                      props.markAsComplete(index);\r\n                    }}\r\n                    type=\"button\"\r\n                  ></i>\r\n                </div>\r\n                <div className=\"col-1\">\r\n                  <i\r\n                    className={\r\n                      element.complete_status\r\n                        ? \"\"\r\n                        : props.editing && index === props.editTaskID\r\n                        ? \"far fa-window-close\"\r\n                        : \"fas fa-edit\"\r\n                    }\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      props.editing && index === props.editTaskID\r\n                        ? props.cancelEditing()\r\n                        : props.editTask(index)\r\n                    }\r\n                  ></i>\r\n                </div>\r\n                <div className=\"col-1\">\r\n                  <i\r\n                    className=\"fas fa-trash-alt\"\r\n                    type=\"button\"\r\n                    onClick={() => props.deleteTask(index)}\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            );\r\n          })}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <h5>No Incomplete Tasks</h5>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { TasksList } from \"./TasksList\";\r\nimport { CompleteTaskList } from \"./CompleteTaskList\";\r\nimport { IncompleteTaskList } from \"./IncompleteTaskList\";\r\n\r\ntoast.configure();\r\n\r\nexport class ToDoList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      inputTask: \"\",\r\n      editing: false,\r\n      editTaskID: \"\",\r\n      ddmode: \"all\",\r\n    };\r\n    this.addTask = this.addTask.bind(this);\r\n    this.updateInputTask = this.updateInputTask.bind(this);\r\n    this.deleteAllTasks = this.deleteAllTasks.bind(this);\r\n    this.markAsComplete = this.markAsComplete.bind(this);\r\n    this.editTask = this.editTask.bind(this);\r\n    this.markAsIncomplete = this.markAsIncomplete.bind(this);\r\n    this.updateTask = this.updateTask.bind(this);\r\n    this.cancelEditing = this.cancelEditing.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.selectValue = this.selectValue.bind(this);\r\n  }\r\n  addTask() {\r\n    if (this.state.inputTask.length === 0 || this.state.inputTask.trim() == 0) {\r\n      toast.error(\"Task cannot be empty\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      //console.log(this.state.inputTask);\r\n      let todoTask = localStorage.getItem(\"todoTasks\");\r\n      let tasksObj;\r\n      if (todoTask == null) {\r\n        tasksObj = [];\r\n      } else {\r\n        tasksObj = JSON.parse(todoTask);\r\n      }\r\n      tasksObj.push({\r\n        task_name: this.state.inputTask,\r\n        complete_status: false,\r\n      });\r\n      document.getElementsByClassName(\"inputTask\")[0].focus();\r\n      localStorage.setItem(\"todoTasks\", JSON.stringify(tasksObj));\r\n      this.setState({ inputTask: \"\" }, () => {\r\n        toast.success(\"Task added successfully\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  updateInputTask(e) {\r\n    if (e.target.value.length > 50) {\r\n      toast.warn(\"Input length exceeded\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      this.setState({ inputTask: e.target.value });\r\n    }\r\n  }\r\n  deleteAllTasks() {\r\n    let todoTask = localStorage.getItem(\"todoTasks\");\r\n    if (todoTask != null) {\r\n      localStorage.removeItem(\"todoTasks\");\r\n      this.setState(this.state);\r\n      document.getElementsByClassName(\"inputTask\")[0].focus();\r\n    }\r\n  }\r\n  markAsComplete(indexID) {\r\n    //console.log(\"markAsComplete called \" + indexID);\r\n    let todoTask = localStorage.getItem(\"todoTasks\");\r\n    let tasksObj;\r\n    if (todoTask !== null) {\r\n      tasksObj = JSON.parse(todoTask);\r\n      tasksObj.forEach((element, index) => {\r\n        if (index === indexID) {\r\n          element.complete_status = true;\r\n          //console.log(element.complete_status);\r\n          localStorage.setItem(\"todoTasks\", JSON.stringify(tasksObj));\r\n          this.setState(this.state);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  markAsIncomplete(indexID) {\r\n    //console.log(\"markAsIncomplete called \" + indexID);\r\n    let todoTask = localStorage.getItem(\"todoTasks\");\r\n    let tasksObj;\r\n    if (todoTask !== null) {\r\n      tasksObj = JSON.parse(todoTask);\r\n      tasksObj.forEach((element, index) => {\r\n        if (index === indexID) {\r\n          element.complete_status = false;\r\n          //console.log(element.complete_status);\r\n          localStorage.setItem(\"todoTasks\", JSON.stringify(tasksObj));\r\n          this.setState(this.state);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  cancelEditing() {\r\n    //console.log(\"editing cancelled\");\r\n    this.setState({\r\n      inputTask: \"\",\r\n      editing: false,\r\n      editTaskID: \"\",\r\n    });\r\n    document.getElementsByClassName(\"inputTask\")[0].focus();\r\n  }\r\n  editTask(indexID) {\r\n    //console.log(\"Edit : \" + indexID);\r\n    let todoTask = localStorage.getItem(\"todoTasks\");\r\n    let tasksObj;\r\n    if (todoTask !== null) {\r\n      tasksObj = JSON.parse(todoTask);\r\n      tasksObj.forEach((element, index) => {\r\n        if (index === indexID) {\r\n          this.setState({\r\n            inputTask: element.task_name,\r\n            editing: true,\r\n            editTaskID: indexID,\r\n          });\r\n          document.getElementsByClassName(\"inputTask\")[0].focus();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  updateTask() {\r\n    //console.log(\"update : \");\r\n    if (this.state.inputTask.length === 0 || this.state.inputTask.trim() == 0) {\r\n      toast.error(\"Task cannot be empty\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      document.getElementsByClassName(\"inputTask\")[0].focus();\r\n    } else {\r\n      let todoTask = localStorage.getItem(\"todoTasks\");\r\n      let tasksObj;\r\n      if (todoTask !== null) {\r\n        tasksObj = JSON.parse(todoTask);\r\n        tasksObj.forEach((element, index) => {\r\n          if (index === this.state.editTaskID) {\r\n            element.task_name = this.state.inputTask;\r\n            localStorage.setItem(\"todoTasks\", JSON.stringify(tasksObj));\r\n            this.setState(\r\n              { inputTask: \"\", editing: false, editTaskID: \"\" },\r\n              () => {\r\n                toast.success(\"Task updated successfully\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                });\r\n              }\r\n            );\r\n            document.getElementsByClassName(\"inputTask\")[0].focus();\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  deleteTask(indexID) {\r\n    //console.log(\"delete : \" + indexID);\r\n    let todoTask = localStorage.getItem(\"todoTasks\");\r\n    let tasksObj = JSON.parse(todoTask);\r\n    if (tasksObj.length > 1) {\r\n      tasksObj.splice(indexID, 1);\r\n      localStorage.setItem(\"todoTasks\", JSON.stringify(tasksObj));\r\n    } else {\r\n      localStorage.removeItem(\"todoTasks\");\r\n    }\r\n    toast.success(\"Task deleted successfully\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    this.setState(this.state);\r\n  }\r\n  selectValue(e) {\r\n    //console.log(e.target.value);\r\n    this.setState({ ddmode: e.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>ToDo App</h1>\r\n        <div className=\"inputWrapper\">\r\n          <input\r\n            className=\"inputTask\"\r\n            placeholder=\"Enter your task.\"\r\n            onChange={this.updateInputTask}\r\n            value={this.state.inputTask}\r\n            autoFocus\r\n          />\r\n          <i\r\n            type=\"button\"\r\n            className={\r\n              this.state.editing ? \"fas fa-save\" : \"fas fa-plus-circle\"\r\n            }\r\n            onClick={this.state.editing ? this.updateTask : this.addTask}\r\n          ></i>\r\n        </div>\r\n        <div className=\"tasksList\">\r\n          {localStorage.getItem(\"todoTasks\") === null ? (\r\n            <h5>\r\n              No tasks yet. Time to chill! <i className=\"far fa-smile-beam\"></i>\r\n            </h5>\r\n          ) : (\r\n            <>\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-6\">\r\n                  <label>Filter by&nbsp;&nbsp;</label>\r\n                  <select onChange={this.selectValue}>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"complete\">Complete</option>\r\n                    <option value=\"incomplete\">Incomplete</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <i\r\n                    className=\"fas fa-dumpster\"\r\n                    type=\"button\"\r\n                    onClick={this.deleteAllTasks}\r\n                  >\r\n                    &nbsp;Delete All\r\n                  </i>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              {this.state.ddmode === \"complete\" ? (\r\n                <CompleteTaskList\r\n                  markAsIncomplete={this.markAsIncomplete}\r\n                  editTask={this.editTask}\r\n                  cancelEditing={this.cancelEditing}\r\n                  editTaskID={this.state.editTaskID}\r\n                  deleteTask={this.deleteTask}\r\n                />\r\n              ) : this.state.ddmode === \"incomplete\" ? (\r\n                <IncompleteTaskList\r\n                  markAsIncomplete={this.markAsIncomplete}\r\n                  markAsComplete={this.markAsComplete}\r\n                  editTask={this.editTask}\r\n                  editing={this.state.editing}\r\n                  cancelEditing={this.cancelEditing}\r\n                  editTaskID={this.state.editTaskID}\r\n                  deleteTask={this.deleteTask}\r\n                />\r\n              ) : (\r\n                <TasksList\r\n                  markAsIncomplete={this.markAsIncomplete}\r\n                  markAsComplete={this.markAsComplete}\r\n                  editTask={this.editTask}\r\n                  editing={this.state.editing}\r\n                  cancelEditing={this.cancelEditing}\r\n                  editTaskID={this.state.editTaskID}\r\n                  deleteTask={this.deleteTask}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport { InfoButton } from \"./components/InfoButton\";\nimport { ModeButton } from \"./components/ModeButton\";\nimport { ToDoList } from \"./components/toDoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ModeButton />\n      <header className=\"App-header\">\n        <ToDoList />\n      </header>\n      <InfoButton />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}